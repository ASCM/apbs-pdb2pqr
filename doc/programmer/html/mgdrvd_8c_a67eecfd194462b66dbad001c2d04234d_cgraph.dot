digraph G
{
  edge [fontname="FreeSans",fontsize="10",labelfontname="FreeSans",labelfontsize="10"];
  node [fontname="FreeSans",fontsize="10",shape=record];
  rankdir=LR;
  Node1 [label="Vmgdriv",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled" fontcolor="black"];
  Node1 -> Node2 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node2 [label="Vmaxlev",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgsubd_8h.html#aafeec659ec982b3db15f71bf92698b32",tooltip="Find maximum multigrid possible coarsenning common to three grid sizes."];
  Node1 -> Node3 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 [label="Vmgdriv2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgdrvd_8c.html#ad88069b85b98b96bcbfbf4bfab67c661",tooltip="Solves the pde using the multi-grid method."];
  Node3 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node4 [label="Vazeros",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#ad9648f5e231786d88b395ba412063c4b",tooltip="Zero out operation for a grid function, including boundary values."];
  Node3 -> Node5 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node5 [label="Vbuildalg",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgsubd_8h.html#af5dcda5c3983e745a0e2cae34a4094e4",tooltip="Build RHS algebraically for analysis purposes."];
  Node5 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node6 [label="Vmatvec",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$matvecd_8h.html#a3550f412c9793915998671c2c0b8df4f",tooltip="Break the matrix data-structure into diagonals and then call the matrix-vector routine."];
  Node6 -> Node7 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node7 [label="Vmatvec27",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$matvecd_8h.html#a20925845b383dba21bf7fb7dafb340b0"];
  Node6 -> Node8 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node8 [label="Vmatvec7",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$matvecd_8h.html#ae6b8553ded343f1ee7d0d4011a560141"];
  Node5 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node9 [label="Vmkcors",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgsubd_8h.html#abb5cb28581c88bf4adaab11d35484ac7",tooltip="Coarsen a grid Compute the number of grid points in the coarser grid, given the number of grid points..."];
  Node9 -> Node10 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node10 [label="Vcorsr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgsubd_8h.html#aec1ae6e963b514a637ca71305e332856",tooltip="Coarsen a grid Compute the number of grid points in the coarser grid, given the number of grid points..."];
  Node5 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node11 [label="Vnmatvec",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$matvecd_8h.html#afbd34b881d565b9bba4cf515e55519c8",tooltip="Break the matrix data-structure into diagonals and then call the matrix-vector routine."];
  Node11 -> Node12 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node12 [label="Vnmatvec27",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$matvecd_8h.html#acfb01799db27c9a74dd7925a8a836dbd"];
  Node11 -> Node13 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node13 [label="Vnmatvec7",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$matvecd_8h.html#a932505d663cc398b4f553290fcabd3d0"];
  Node3 -> Node14 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 [label="Vbuildops",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgsubd_8h.html#a1ae001bade7ef2006a2fd9de15b9c7e3",tooltip="Build operators, boundary arrays, modify affine vectors ido==0: do only fine level ido==1: do only co..."];
  Node14 -> Node15 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node15 [label="Vbuildband",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$build_bd_8h.html#a2df5349f181d18f4c8760d154face9a9",tooltip="Build and factor a banded matrix given a matrix in diagonal form."];
  Node14 -> Node16 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node16 [label="Vbuildcopy0",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgsubd_8h.html#af869cb57ae08d0bcdaf96f5ee29c701a",tooltip="Produce information for a coarser grid. Also harmonically average the problem coefficients."];
  Node14 -> Node17 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node17 [label="Vbuildgaler0",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$mgsubd_8h.html#ac3878a7358faf90a4e0e0067f0961a37",tooltip="Form the Galerkin coarse grid system."];
  Node17 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node18 [label="Vrestrc",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$matvecd_8h.html#aede4c916a1698890f6fdbda54778d491",tooltip="Apply the restriction operator."];
  Node14 -> Node19 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node19 [label="Vbuildharm0",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgsubd_8h.html#ab81768f9181b9bdfeab930b957a7c26c",tooltip="Produce information for a coarser grid. Also harmonically average the problem coefficients."];
  Node14 -> Node20 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node20 [label="VbuildP",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$build_pd_8h.html#a7de05fbf33504a49c87628ef9a58b26f"];
  Node14 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node21 [label="Vextrac",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$matvecd_8h.html#afa446fbf1bb85646b186469db9768ab8",tooltip="Simple injection of a fine grid function into coarse grid."];
  Node21 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node22 [label="VfboundPMG00",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#aa5cd2792bb251ae2ee940d0b7de06a42",tooltip="Initialize a grid function to have a zero boundary value."];
  Node14 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node14 -> Node23 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node23 [label="Vprtmatd",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$mikpckd_8h.html#a4bf7ed81bbcfc630677a68ff3ef78570"];
  Node3 -> Node24 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node24 [label="Vbuildstr",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgsubd_8h.html#a81ac80afc08fb27607efdc5c9e97ceaa",tooltip="Build the nexted operator framework in the array iz."];
  Node24 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 -> Node25 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node25 [label="VfboundPMG",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#a04aca6300210f7c190bda51d25fe2bd4",tooltip="Initialize a grid function to have a certain boundary value,."];
  Node25 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 -> Node26 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node26 [label="Vfmvfas",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgfasd_8h.html#a0360523d2daeac53745490415dd01e8c",tooltip="Nested iteration for a nonlinear multilevel method. Algorithm: nonlinear multigrid iteration (fas)..."];
  Node26 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node27 [label="VinterpPMG",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$matvecd_8h.html#a9c1d062d8b452deeffc8e759fdc8f246",tooltip="Apply the prolongation operator."];
  Node26 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node26 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node28 [label="Vmkfine",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$mgsubd_8h.html#a7b0bd272745e2c31bf1ebc11a8d40b2d",tooltip="Refine a grid Compute the number of grid points in the finer grid, given the number of grid points in..."];
  Node26 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 [label="Vmvfas",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgfasd_8h.html#a671353778588b9a4c30522ed882a161e",tooltip="Nonlinear multilevel method."];
  Node29 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 -> Node21 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node30 [label="Vivariv",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgsubd_8h.html#ae48ff034897f3c1c594d8873c730fe8b",tooltip="Coarsen a single dimension of a grid Compute the number of grid points in the coarser grid..."];
  Node29 -> Node31 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node31 [label="Vlinesearch",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#a0bf03c8d451c3256efa8b3b9c9db1831"];
  Node29 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 -> Node11 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 -> Node32 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node32 [label="Vnmresid",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$matvecd_8h.html#acb2fd32fc0aa12d56b7620ae0a7712e1",tooltip="Break the matrix data-structure into diagonals and then call the residual routine."];
  Node29 -> Node33 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node33 [label="Vnsmooth",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$smoothd_8h.html#a423f66e215b77f2d9e4e0569cf36b9c8",tooltip="call the appropriate non-linear smoothing routine."];
  Node29 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node29 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node34 [label="Vxaxpy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#ac453601512aae1d82a7bf7c14326f0b6",tooltip="saxpy operation for a grid function with boundary values."];
  Node29 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node35 [label="Vxcopy",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#a964d91008dba76f460e36b9a207fb2af",tooltip="Copy operation for a grid function with boundary values. Quite simply copies one 3d matrix to another..."];
  Node29 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node36 [label="Vxdot",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#a3f117cfb2336b1291164ef351dd2bd69",tooltip="Inner product operation for a grid function with boundary values."];
  Node29 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node37 [label="Vxnrm1",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#ae89d002951e3c000702b22cc44bc9b3c",tooltip="Norm operation for a grid function with boundary values."];
  Node29 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node38 [label="Vxnrm2",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#ac7a7f2c804a247ec8b5aea45058e1d26",tooltip="Norm operation for a grid function with boundary values."];
  Node3 -> Node39 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 [label="Vipower",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$powerd_8h.html#a216315908e761d09584f0f4a6613132c",tooltip="Standard inverse power method for minimum eigenvalue estimation."];
  Node39 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node40 [label="Vaxrand",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#a0cc1b42e9c573d4c0b960afda283b0b1",tooltip="Fill grid function with random values, including boundary values."];
  Node39 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 [label="Vmvcs",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgcsd_8h.html#ab7f955448bd40d97f3b1b3ac91b9f21c",tooltip="Screaming linear multilevel method."];
  Node41 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node42 [label="Vdpbsl",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$mlinpckd_8h.html#aa6b1f5bd8bb97680316ad7b55559b016",tooltip="Solves the double precision symmetric positive definite band system A*X = B using the factors compute..."];
  Node42 -> Node42 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node22 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node27 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node30 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node28 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node43 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node43 [label="Vmresid",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$matvecd_8h.html#aaa7843124ee62ccb6d9469363a8cd6a6",tooltip="Break the matrix data-structure into diagonals and then call the residual routine."];
  Node41 -> Node18 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node44 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node44 [label="Vsmooth",height=0.2,width=0.4,color="red", fillcolor="white", style="filled",URL="$smoothd_8h.html#a7f469e5b5661e8c176889cde7bed8175",tooltip="call the appropriate linear smoothing routine."];
  Node41 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node45 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node45 [label="Vxcopy_large",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#af2989f16a64132f085943e0cafca0c5d",tooltip="Copy operation for a grid function with boundary values. Quite simply copies one 3d matrix to another..."];
  Node41 -> Node46 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node46 [label="Vxcopy_small",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#a6243a4021fb62c2ca1008c747ff8dd7f",tooltip="Copy operation for a grid function with boundary values. Quite simply copies one 3d matrix to another..."];
  Node41 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node37 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node41 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node39 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node47 [label="Vxscal",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mikpckd_8h.html#a678a92f4fb3447e6dbbc97bef28e160e",tooltip="Scale operation for a grid function with boundary values."];
  Node3 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 -> Node48 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 [label="Vmpower",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$powerd_8h.html#a5240f02110d5da3a8952817913fffcbd"];
  Node48 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node48 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 -> Node41 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 -> Node29 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node3 -> Node49 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 [label="Vpower",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$powerd_8h.html#adbff80ddaeeb1efd8ad2a9cd1cfad1da",tooltip="Standard power method for maximum eigenvalue estimation of a matrix c* c*."];
  Node49 -> Node40 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 -> Node4 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 -> Node6 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 -> Node34 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 -> Node35 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 -> Node36 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 -> Node38 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node49 -> Node47 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node1 -> Node50 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
  Node50 [label="Vmgsz",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$mgdrvd_8c.html#a5f5b52099b346692aaa497a701395d7e",tooltip="This routine computes the required sizes of the real and integer work arrays for the multigrid code..."];
  Node50 -> Node9 [color="midnightblue",fontsize="10",style="solid",fontname="FreeSans"];
}
