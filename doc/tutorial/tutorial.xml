<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS/DTD DocBook XML V4.2//EN"
"http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd" [
<!ENTITY apbsversion "0.4.1">
<!ENTITY apbsdate "Not yet released">
<!ENTITY apbsurl "http://apbs.sf.net">
<!ENTITY ugurl "../user-guide/index.html">
<!ENTITY pdb2pqrurl "http://pdb2pqr.sf.net/">
<!ENTITY vmdurl "http://www.ks.uiuc.edu/Research/vmd/">
<!ENTITY pymolurl "http://pymol.sf.net">
<!ENTITY pmvurl "http://www.scripps.edu/~sanner/python/">
]>

<book>
	<bookinfo>
		<title>APBS tutorial</title>
		<author>
			<firstname>Nathan</firstname>
			<surname>Baker</surname>
			<affiliation> 
				<orgname>Washington University in St.  Louis</orgname> 
				<orgdiv>Department of Biochemistry and
					Molecular Biophysics</orgdiv>
				<orgdiv>Center for Computational Biology</orgdiv>
			</affiliation>
			<address> 
				<street>700 S.  Euclid Ave.</street>
			       	<street>Campus Box 8036</street>
			       	<city>St.  Louis</city>
			       	<state>MO</state>
			       	<postcode>63110</postcode>
			       	<country>USA</country>
				<email>baker@ccb.wustl.edu</email> 
			</address> 
		</author>
		<copyright>
			<year>2002</year> <year>2003</year> <year>2004</year> 
			<year>2005</year> <year>2006</year>
			<holder>Washington University in St.  Louis</holder>
		</copyright>
		<legalnotice>
			<para>This file is part of APBS.</para>
			<para>This program is free software; you can
				redistribute it and/or modify it under the
				terms of the GNU General Public License as
				published by the Free Software Foundation;
				either version 2 of the License, or (at your
				option) any later version.</para>
			<para>This
				program is distributed in the hope that it will
				be useful, but WITHOUT ANY WARRANTY; without
				even the implied warranty of MERCHANTABILITY or
				FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
				General Public License for more details.</para>
			<para>You should have received a copy of the GNU
				General Public License along with this program;
				if not, write to the Free Software Foundation,
				Inc., 59 Temple Place, Suite 330, Boston, MA
				02111-1307 USA</para>
			<para>Linking APBS statically or dynamically with other
				modules is making a combined work based on
				APBS.  Thus, the terms and conditions of the
				GNU General Public License cover the whole
				combination.</para>
			<para>SPECIAL GPL EXCEPTION: In addition, as a special
				exception, the copyright holders of APBS give
				you permission to combine the APBS program with
				free software programs and libraries that are
				released under the GNU LGPL or with code
				included in releases of ISIM, Ion Simulator
				Interface, PMV, PyMOL SMOL, VMD, and Vision.
				Such combined software may be linked with APBS
				and redistributed together in original or
				modified form as mere aggregation without
				requirement that the entire work be under the
				scope of the GNU General Public License.  This
				special exception permission is also extended
				to any software listed in the SPECIAL GPL
				EXCEPTION clauses by the PMG, FEtk, MC, or
				MALOC libraries.</para>
			<para>Note that people who make modified versions of
				APBS are not obligated to grant this special
				exception for their modified versions; it is
				their choice whether to do so.  The GNU General
				Public License gives permission to release a
				modified version without this exception; this
				exception also makes it possible to release a
				modified version which carries forward this
				exception.</para>
		</legalnotice>
		<date>&apbsdate;</date>
		<edition>APBS version &apbsversion;</edition>
	</bookinfo>

	<toc></toc>

	<chapter id="introduction-sect"> <title>How to read this tutorial</title>

		<para>This tutorial is designed as a "how to" document to get
			users acquainted with computational electrostatics
			calculations using APBS.  In order to perform the
			provided examples, you will need the latest version of
			APBS (<ulink url="&apbsurl;">&apbsurl;</ulink>).  Other
			requirements are listed in the individual
			sections.</para>

		<important>
			<para>Note that many of the examples in this tutorial
				can also be run through the web-based <ulink
					url="http://gemstone.mozdev.org/">Gemstone</ulink>
				service without the need for local
				installations of the APBS software.  More
				information is available in <xref
					linkend="gemstone-sect"/>.
			</para>
		</important>

	</chapter>

	<chapter id="pdb2pqr-sect"> <title>How do I get my structure ready for
			electrostatics calculations?</title>

		<para>
			In order to perform electrostatics calculations on your
			biomolecular structure of interest, you need to provide
			atomic charge and radius information to APBS.  Charges
			are used to form the biomolecular charge distribution
			for the Poisson-Boltzmann (PB) equation while the radii
			are used to construct the dielectric and ionic
			accessibility functions.  This charge and radius
			information can be provided to APBS in a few different
			formats which are described in more detail below.
		</para>

		<sect1 id="pqr-format-sect"> <title>PQR format</title>
			<para>
				The <ulink url="&ugurl;#pqr-format">PQR
					format</ulink> provides a very simple
				way to include parameter information by 
				by replacing the occupancy and temperature
				columns of a PDB-format structure file with 
				charge ("Q") and radius ("R") information.
				Unfortunately, the simplicity of this format
				also limits its extensibility:  it can be very
				difficult to add new atom types and parameters
				in a generic format without the use of external
				software such as <ulink
					url="&pdb2pqrurl;">PDB2PQR</ulink>.
				The XML parameter format described <link
					linkend="xml-format-sect">below</link>
				is much easier to modify.
			</para>
		</sect1>

		<sect1 id="xml-format-sect"> <title>XML format</title>
			<warning><para>Under construction</para></warning>
		</sect1>

		<sect1 id="pdb2pqr-subsect"> <title>Generating PQR files from PDB
				files (PDB2PQR)</title>

			<note>
				<para>This tutorial was prepared using PDB2PQR
					1.1.2</para>
			</note>

			<para>
				The <ulink url="&pdb2pqrurl;">PDB2PQR</ulink>
				web service and software will convert
				most PDB files into PQR format with
				some caveats:
				<itemizedlist>
					<listitem>
						<para>
							Limited ligand support.
							Given the ambiguities
							associated with
							implicit solvent force
							field parameter
							development, atom types
							not included in
							standard force fields
							are currently not
							supported by PDB2PQR.
							We're in the process of
							including such support.
						</para>
					</listitem>
					<listitem>
						<para>
							Inability to "repair"
							large regions of
							missing coordinates.
							Although PDB2PQR can
							fix some missing heavy
							atoms in sidechains, it
							does not currently have
							the (nontrivial)
							capability to model in
							large regions of
							missing backbone and
							sidechain coordinates.
						</para>
					</listitem>
				</itemizedlist>
				<ulink url="&pdb2pqrurl;">PDB2PQR</ulink> will
				also perform hydrogen bond optimization,
				sidechain rotamer search, limited titration
				state assignment, and APBS input file
				preparation.  Please see 
				<ulink url="&pdb2pqrurl;">&pdb2pqrurl;</ulink>
				for more details.
			</para>

			<para>
				As mentioned above, PDB2PQR is discussed in
				more detailed on the 
				<ulink url="&pdb2pqrurl;">PDB2PQR
					homepage</ulink> .  Therefore, we will
				review the minimal steps required to produce a
				PQR file from a PDB file here.  To begin,
				choose a server from <ulink
					url="&pdb2pqrurl;#availability">&pdb2pqrurl;#availability</ulink>.
			</para>

			<sect2> <title>Choose the PDB file to convert</title>
				<para>
					Either enter the 4-character <ulink
						url="http://www.pdb.org/">PDB</ulink>
					ID or accession number (e.g., <ulink
						url="http://www.pdb.org/pdb/explore.do?structureId=1FAS">1FAS</ulink>,
					<ulink
						url="http://www.pdb.org/pdb/explore.do?structureId=1MAH">1MAH</ulink>,
					<ulink
						url="http://www.pdb.org/pdb/explore.do?structureId=1LYS">1LYS</ulink>,
					etc.) or upload your own PDB file.
					<note>
						<para> Note that, if you choose
							to enter a 4-character
							PDB file, PDB2PQR will
							process 
							<emphasis>all
								recognizable 
								chains</emphasis> 
							of PDB file
							<emphasis>as it was
								deposited</emphasis>
							in the PDB (e.g., not 
							the biological unit,
							any related
							transformations, etc.).
						</para>
					</note>
				</para>
			</sect2>

			<sect2 id="pdb2pqr-ff-sect"> <title>Pick a forcefield</title>
				<para>
					<emphasis>For most applications, the choice is
						easy:  PARSE.</emphasis>  This
					forcefield has been optimized for
					implicit solvent calculation and is
					probably the best choice for
					visualization of protein electrostatics
					and many common types of energetic
					calculations for proteins.  However,
					AMBER and CHARMM may be more
					appropriate if you are attempting to
					compare directly to simulations
					performed with those force fields,
					require nucleic acid support, are
					simulating ligands parameterized with
					those force fields, etc.
				</para>
				<para>
					It is also possible to upload a
					user-defined forcefield (e.g., to
					define radii and charges for ligands or
					unusual residues).  Please see the
					<ulink
						url="&pdb2pqrurl;">PDB2PQR</ulink>
					documentation for more information.
				</para>
			</sect2>

			<sect2> <title>Output naming scheme</title>

				<para>This is largely irrelevant to
					electrostatics calculations but may be
					important for visualization.  When in
					doubt, choose the "Internal naming
					scheme" which attempts to conform to
					IUPAC standards.</para>
			</sect2>

			<sect2> <title>Other options</title>

				<para>These options fall into two categories:
					how to build missing atoms (including
					hydrogens) onto the structure and
					additional output configuration.</para>

				<variablelist> <title>Missing atom build
						options</title>
					<varlistentry> 
						<term> Ensure that new atoms
							are not rebuilt too
							close to existing atoms
						</term>
						<listitem>
							<para>
								"Debump" any
								rebuilt atoms
								to remove
								steric clashes.
								<emphasis>This
									is
generally a good option to include</emphasis>.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term> Optimize the hydrogen
							bonding network </term>
						<listitem>
							<para>
								This rotates
								hydrogen
								torsion angles
								and flips
								ambiguous
								sidechain
								placements in
								an attempt to
								optimize the
								overall
								hydrogen
								bonding
								network.
								<emphasis>This
									is
generally a good option to include</emphasis>.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term> Use 
							<ulink url="http://propka.chem.uiowa.edu/">PROPKA</ulink> 
							to assign protonation
							states at pH...</term>
						<listitem>
							<para> Assign titration
								states (for
								proteins) with
								<ulink
									url="http://propka.chem.uiowa.edu/">PROPKA</ulink>.
							</para>
						</listitem>
					</varlistentry>
				</variablelist> 

				<variablelist>  <title>Output options</title>
					<varlistentry>
						<term>Create an APBS input
							file</term>
						<listitem>
							<para> Useful if you're
								planing to run
								APBS on your
								own.  At the
								very least,
								this generates
								a nice
								template for
								customization.
							</para>
						</listitem>
					</varlistentry>
					<varlistentry>
						<term>Add/keep chain IDs in the
							PQR file</term>
						<listitem>
							<para> Unfortunately,
								chain IDs still
								baffle
								APBS<footnote><para>Sorry,
										we're
										still
										working
										on
										introducing
										this
										while
										maintaining
										flexibility
										for
										parsing
										strange
										PDB
										formats...</para></footnote>
								but they can be
								useful for
								visualization.
							</para>
						</listitem>
					</varlistentry>
				</variablelist> 

			</sect2>

			<sect2> <title>Running the calculation and downloading
					the results</title>
				<para>Hit <guibutton>Submit</guibutton> to run
					the calculation.  Note that some
					options (particularly hydrogen bond
					network optimization and PROPKA
					assignment) can increase the runtime.
					You should get intermittent updates on
					the progress of your calculation from
					the web server.</para>

				<para>When you download the result from the web
					page,<footnote><para>One can usually
							download, rather than
							display the file, by
							right-clicking or
							Ctrl-clicking the
							link.</para></footnote>
					many browsers will attach a ".txt"
					extension to the file.  This generally
					needs to be removed before it can be
					used with visualization software.
				</para>

				<para>Finally, for many types of electrostatic
					calculations, 
					<emphasis>it will be useful to remove
						any explicit water and
						unparameterized ligands from the 
						PQR structure</emphasis> before
					proceeding.  This can be done with your
					favorite <ulink
						url="http://en.wikipedia.org/wiki/Text_editor">text
						editor</ulink>.
				</para>
			</sect2>

			<warning>
				<para>STILL UNDER CONSTRUCTION</para> 
			</warning>

		</sect1> 

	</chapter>

	<chapter id="viz-sect"> <title>How do I visualize the electrostatic
potential around my biomolecule?</title>

		<para> There are a number of excellent molecular graphics
			programs which can be used to visualize electrostatic
			properties in the context of the biomolecule.  Since
			there are far too many to review in any depth, we will
			focus on the 3 packages with which we are most
			familiar. </para>

		<sect1 id="vmd-sect"> <title>VMD</title>

			<para>
				The <ulink url="&vmdurl;">VMD</ulink> molecular
				graphics software package provides support for
				both the execution of APBS and the
				visualization of the resulting electrostatic
				potentials.  Documentation on the APBS
				interface has been provided by the VMD
				developers at <ulink
					url="http://www.ks.uiuc.edu/Research/vmd/plugins/apbsrun/">http://www.ks.uiuc.edu/Research/vmd/plugins/apbsrun/</ulink>.
				We will supplement this with a basic
				demonstration of how go from a PDB entry to a
				plot of structure &amp; potential in VMD using
				APBS.
			</para>

			<note>
				<para>This tutorial was written using VMD
					1.8.5.</para>
			</note>

			<sect2> <title>Generating the PQR</title>

				<para> 
					We'll perform this example with arc
					repressor
					(PDB ID <ulink
						url="http://www.pdb.org/pdb/explore.do?structureId=1MYK">1MYK</ulink>),
					a DNA binding protein.  The first step
					in the visualization process is
					generating a PQR file for use with VMD
					and APBS.  Please follow the directions
					in <xref linkend="pdb2pqr-subsect"/> to
					generate a PQR file for this structure.
				</para>
			</sect2>

			<sect2> <title>Loading the PQR</title>

				<para>
					Load the PQR file you just created into
					VMD (<menuchoice>
						<guimenu>File</guimenu> 
						<guimenuitem>New molecule...</guimenuitem>
					</menuchoice> in the VMD Main window).
					Adjust the molecule to the desired
					view.
					<footnote>
						<para> At this point you may
							notice (to many users'
							chagrin) that PDB2PQR
							removed the chain IDs
							from the structure.
							Sorry about this; we're
							trying to fix it in
							future releases of APBS
							and PDB2PQR.</para>
					</footnote>
					Depending on the force
					field<footnote><para>Visualization
							seems to work best with
							PARSE</para></footnote>
					you used in PDB2PQR, you may notice
					that VMD is displaying some strange
					bonds.  When a PQR file is loaded into
					VMD, bond distances are inferred from
					the PQR radii.  These radii were chosen
					for continuum electrostatics
					calculations, not visualization.  Don't
					worry if some of the bonds appear a bit
					strange (hide the hydrogens if it
					really bothers you).
				</para>

			</sect2>

			<sect2> <title>Running the electrostatics calculation</title>

				<para>
					You're now ready for electrostatics
					calculations.  
					<orderedlist>
						<listitem>
							<para>Choose
								<menuchoice>
									<guimenu>Extensions</guimenu>
									<guisubmenu>Analysis</guisubmenu>
									<guimenuitem>APBS
										electrostatics</guimenuitem>
								</menuchoice>
								in the VMD Main
								window.  A new
								APBS Tool
								window should
								appear.
							</para>
						</listitem>
						<listitem>
							<para>Choose 
								<menuchoice>
									<guimenu>Edit</guimenu> 
									<guimenuitem>Settings...</guimenuitem> 
								</menuchoice> 
								in the APBS
								Tool window and
								set the path to
								your local copy
								of the APBS
								executable.
								Hit
								<guibutton>OK</guibutton>
								to close this
								window.
							</para>
						</listitem>
						<listitem>
							<para>Select the "0"
								calculation
								from the
								"<guilabel>Individual
									PB
									calculations
									(ELEC):</guilabel>"
								window.  Hit 
								the
								<guibutton>Edit</guibutton>
								button.  Adjust
								the APBS
								settings here
								as you desire.
								The defaults
								are usually
								fine, although
								it may be
								useful to edit
								the ions to
								adjust the
								ionic strength
								used in the
								calculation.
								Hit
								<guibutton>OK</guibutton>
								when you're
								done.
							</para>
						</listitem>
						<listitem>
							<para>You're now ready
								to run the
								calculation.
								Hit
								<guibutton>Run
									APBS</guibutton>
								in the APBS
								Tool window.
								Check the VMD
								Console window
								for information
								about the job
								while it's
								running.  When
								the job is
								finished, a
								"APBSRun: Load
								APBS Maps"
								window should
								appear.  Select
								"<guibutton>Load
									files
									into
									top
									molecule</guibutton>"
								and hit
								<guibutton>OK</guibutton>.
							</para>
						</listitem>
					</orderedlist>
				</para>

			</sect2>

			<sect2> <title>Electrostatics visualization</title>

				<sect3 id="vmd-isocontour">  <title>Isocontour visualization</title>
					<para>
						One of the most popular
						visualization methods is the
						isocontour.
					</para>
					<orderedlist>
						<listitem>
							<para>First, choose <menuchoice> 
									<guimenu>Graphics</guimenu> 
									<guimenuitem>Representations...</guimenuitem>
								</menuchoice>
								from the VMD
								Main window.
							</para>
						</listitem>
						<listitem>
							<para>
								Hit the
								<guibutton>Create
									Rep</guibutton>
								button and
								change
								<guilabel>Drawing
									Method</guilabel>
								to
								"Isosurface".
							</para>
						</listitem>
						<listitem>
							<para>
								Change
								<guilabel>Draw</guilabel>
								from "Points"
								to "Solid
								Surface" and
								<guilabel>Material</guilabel>
								to
								"Transparent". 
							</para>
						</listitem>
						<listitem>
							<para>
								Note that the
								current
								isovalue is 0;
								change this to
								1 (or 5 or 10
								or whatever)
								depending on
								your personal
								preferences.
							</para>
						</listitem>
						<listitem>
							<para>
								To continue the
								lonstanding
								tradition of
								electrostatic
								potential
								coloring,
								choose "ColorID
								0" for the
								<guilabel>Coloring
									Method</guilabel>.
							</para>
						</listitem>
						<listitem>
							<para>
								For the
								negative
								isocontour, hit
								"<guibutton>Create
									Rep</guibutton>"
								and select the
								newly created
								representation.
								Change the
								isocontour
								value to -1 (or
								5 or 10...) and
								the ColorID to
								1.
							</para>
						</listitem>
					</orderedlist>
					<para>
						At this point, you probably
						have an image that looks
						something like this (note that
						I changed the surface to points
						to make the figure a bit
						cleaner):
						<figure> <title>Arc repressor isocontours in VMD</title>
							<graphic
								fileref="images/arc-iso-vmd.png"></graphic>
						</figure>
					</para>
				</sect3>

				<sect3> <title>Visualizing surface potentials</title>
					<para>
						Another popular method of
						electrostatic potential
						visualization maps the
						electrostatic potential to the
						biomolecular surface.  Before
						proceeding, you may want to
						delete the two isocontours you
						just created using the
						<guibutton>Delete
							Rep</guibutton> in the
						Graphical Representations
						window.
					</para>
					<orderedlist>
						<listitem>
							<para>
								Go to the
								Graphical
								Representations
								window
								(<menuchoice>
									<guimenu>Graphics</guimenu>
									<guimenuitem>Representations...</guimenuitem>
								</menuchoice>
								from the VMD
								Main window)
								and create a
								new
								representation
								of the molecule
								with the 
								<guibutton>Create
									Rep</guibutton>
								button.
							</para>
						</listitem>
						<listitem>
							<para> Go to the "Draw
								style" tab of
								the Graphical
								Representations
								window and
								change
								<guilabel>Drawing
									Method</guilabel>
								to
								"Surf"<footnote>
									<para>FYI,
										this
										appears
										to
										generate
										a
										molecular
										or
										Connolly
										type
										of
										surface
										rather
										than
										the
										solvent-accessible
										or
										Lee-Richards
										surface
										I
										personally
										prefer
										for
										this
										type
										of
										visualization...</para>
								</footnote>
								and
								<guilabel>Coloring
									Method</guilabel>
								to "Volume".
							</para>
						</listitem>
						<listitem>
							<para>
								Go to the
								"Trajectory
								tab" of the
								Graphical
								Representations
								window
								and change the
								"<guilabel>Color
									Scale
									Data
									Range:</guilabel>"
								to -10 to 10
								(or whatever
								your favorite
								values are).
							</para>
						</listitem>
						<listitem>
							<para>
								Based on your
								version of VMD
								and your
								personal
								preferences,
								you might want
								to change the
								color scale for
								this image.  Go
								to <menuchoice>
									<guimenu>Graphics</guimenu>
									<guimenuitem>Colors...</guimenuitem>
								</menuchoice>
								in the VMD Main
								window and
								select the
								"Color Scale"
								tab from the
								new "Color
								Controls"
								window.  The
								traditional
								coloring scheme
								for
								electrostatics
								is "RWB" (in
								the
								<guilabel>Method</guilabel>
								menu).
							</para>
						</listitem>
					</orderedlist>
					<para>
						Your molecule now probably
						looks like this:
						<figure> <title>Arc repressor surface potential in VMD</title>
							<graphic fileref="images/arc-surf-vmd.png"></graphic>
						</figure>
					</para>
				</sect3>

			</sect2>

		</sect1>

		<sect1 id="pymol-sect"> <title>PyMOL</title>
			<para>
				The <ulink url="&pymolurl;">PyMOL</ulink> molecular
				graphics software package provides support for
				both the execution of APBS and the
				visualization of the resulting electrostatic
				potentials.  We will provide a basic
				demonstration of how go from a PDB entry to a
				plot of structure &amp; potential in PyMOL using
				APBS.
			</para>

			<note>
				<para>This tutorial was written using
					PyMOLX11Hybrid 0.99 on a Mac.</para>
			</note>

			<sect2> <title>Generating the PQR</title>
				<para>We'll perform this example with
					fasciculin-2 (PDB ID <ulink
						url="http://www.pdb.org/pdb/explore.do?structureId=1FAS">1FAS</ulink>),
					a snake neurotoxin which binds the
					negatively-charged
					acetylcholinesterase.  Please generate
					the PQR file using the steps outlined
					in <xref linkend="pdb2pqr-subsect"/>.
				</para>

				<para>Load the PQR file you created into PyMOL
					(<menuchoice> <guimenu>File</guimenu>
						<guimenuitem>Open...</guimenuitem>
					</menuchoice>) and choose your favorite
					graphical representation.</para>

			</sect2>

			<sect2> <title>Performing the electrostatics calcuation
					</title>

				<para>
					Go to the 
					<menuchoice>
						<guimenu>Plugin</guimenu>
						<guimenuitem>APBS
							Tools...</guimenuitem>
					</menuchoice>
					to open the APBS calculation plugin.
					<orderedlist>
						<listitem>
							<para>
								Under the
								"<guilabel>Main</guilabel>"
								tab of the
								PyMOL APBS
								Tools window,
								select
								<guibutton>Use
									another
									PQR</guibutton>
								and either
								browse to (via
								the
								<guibutton>Choose
									Externally
									Generated
									PQR:</guibutton>
								button) or input the
								path to your
								PQR file.  This
								step is
								necessary to
								ensure you use
								the radii and
								charges
								assigned by
								PDB2PQR.
							</para>
						</listitem>
						<listitem>
							<para>
								Under the
								"<guilabel>APBS
									Location</guilabel>"
								tab of the
								PyMOL APBS
								Tools window,
								either browse
								to (via the
								<guibutton>APBS
									binary
									location:
									:</guibutton>
								button) or input the
								path to your
								local APBS
								binary.  It is
								not necessary
								to provide a
								path to the
								APBS psize.py
								binary for most
								biomolecules.
							</para>
						</listitem>
						<listitem>
							<para>
								Under the
								"<guilabel>Temporary
									File
									Locations</guilabel>"
								tab of the
								PyMOL APBS
								Tools window,
								customize the
								locations of
								the various
								temporary files
								created during
								the run.  This
								can be useful
								if you want to
								save the
								generated files
								for later use.
							</para>
						</listitem>
						<listitem>
							<para>
								Under the
								"<guilabel>Configuration</guilabel>"
								tab of the
								PyMOL APBS
								Tools window,
								hit the
								<guibutton>Set
									grid</guibutton>
								to set the grid
								spacings.
								The default
								values are
								usually
								sufficient for
								all but the
								most highly
								charged
								biomolecules.
							</para>
						</listitem>
						<listitem>
							<para>
								Under the
								"<guilabel>Configuration</guilabel>"
								tab of the
								PyMOL APBS
								Tools window,
								customize the
								remaining
								parameters; the
								defaults are
								usually
								OK<footnote><para>Although
										I
										usually
										prefer
										0.150
										concentrations
										for
										the
										+1
										and
										-1
										ion
										species
										so
										electrostatic
										properties
										aren't
										overly
										exaggerated.</para></footnote>.
							</para>
						</listitem>
						<listitem>
							<para>
								Under the
								"<guilabel>Configuration</guilabel>"
								tab of the
								PyMOL APBS
								Tools window,
								hit the
								<guibutton>Run
									APBS</guibutton>
								button to start
								the APBS
								calculation.
								Depending on
								the speed of
								your computer,
								this could take
								a few minutes.
								The
								<guibutton>Run
									APBS</guibutton>
								button will
								become
								unselected when
								the calcaultion
								is finished.
							</para>
						</listitem>
					</orderedlist>
				</para>

			</sect2>

			<sect2> <title>Visualize the electrostatic potential</title>

				<para> Before proceeding with the remaining
					steps, you must load the electrostatic
					potential data into PyMOL.  Under the
					"<guilabel>Visualization</guilabel>"
					tab of the PyMOL APBS Tools window, hit
					the <guibutton>Update</guibutton>
					button.  </para>

				<sect3> <title>Electrostatic isocontours</title>

					<para>PyMOL makes this step very easy:
						adjust the positive and
						negative
						"<guilabel>Contour</guilabel>"
						fields to the desired values
						(usually +/-1, +/-5, or +/-10
						kT/e<footnote><para>Note that
								PyMOL has a
								slight units
								error on the
								contour
								values.</para></footnote>)
						and hit the 
						<guilabel>Positive Isosurface</guilabel>
						and <guilabel>Negative Isosurface</guilabel>
						and <guibutton>Show</guibutton>
						buttons.
					</para>

					<para>
						At this point, you probably
						have a figure that looks
						something like:
						<figure> <title>+/- 1 kT/e
							electrostatic potential
							isocontours of FAS2 in PyMOL</title>
							<graphic
								fileref="images/fas2-iso-pymol.png"></graphic>
						</figure>
					</para>
				</sect3>

				<sect3> <title>Surface potentials</title>

					<para>If you haven't already, hide the
						isocontours by hitting
						<guilabel>Positive Isosurface</guilabel>
						and <guilabel>Negative Isosurface</guilabel>
						and <guibutton>Hide</guibutton>
						buttons.
					</para>

					<para>The surface potential is also
						straightforward to visualize.
						Set the 
						"<guilabel>Low</guilabel>"
						and
						"<guilabel>High</guilabel>"
						values to the desired values 
						(usually +/-1, +/-5, or +/-10
						kT/e) at which the surface
						colors are clamped at red (-)
						or blue (+).  Check the
						"<guibutton>Solvent accessible
							surface</guibutton>"
						and "<guibutton>Color by
							potential on sol. acc.
							surf.</guibutton>"
						buttons to plot the potential
						on the solvent-accessible
						(probe-inflated or
						Lee-Richards)
						surface<footnote>
							<para>In my opinion,
								the
								solvent-accessible
								surface tends
								to reveal more
								global features
								of the surface
								potential.
								Tighter
								surfaces (e.g.,
								van der Waals
								and molecular
								or Connolly
								surfaces) tend
								to simply map
								atomic surface
								onto the
								biomolecular
								surface.</para>
						</footnote>.
						Hit the "<guilabel>Molecular
							Surface</guilabel>"
						<guibutton>Show</guibutton>
						button to load the surface
						potential.
						<figure> <title>+/- 5 kT/e
							electrostatic surface potential
							of FAS2 in PyMOL</title>
							<graphic
								fileref="images/fas2-surf-pymol.png"></graphic>
						</figure>
					</para>

				</sect3>

			</sect2>

		</sect1>

		<sect1 id="pmv-sect"> <title>PMV</title>

			<!--
			<para>
				The <ulink url="&pmvurl;">PMV</ulink> molecular
				graphics software package provides support for
				both the execution of APBS and the
				visualization of the resulting electrostatic
				potentials.  Documentation on the APBS
				interface has been provided by the PMV
				developers at <ulink
					url="http://msltools.scripps.edu/documentation/tutorial/molecular-electrostatics">http://msltools.scripps.edu/documentation/tutorial/molecular-electrostatics</ulink>
				We will supplement this with a basic
				demonstration of how go from a PDB entry to a
				plot of structure &amp; potential in PMV using
				APBS.
			</para>

			<note>
				<para>This tutorial was written using PMV
					1.4.3.</para>
			</note>

			<sect2> <title>Generating the PQR</title>

				<para> 
					We'll perform this example with
					calmodulin
					(PDB ID <ulink
						url="http://www.pdb.org/pdb/explore.do?structureId=1CFD">1CFD</ulink>),
					a <ulink
						url="http://www.pdb.org/pdb/static.do?p=education_discussion/molecule_of_the_month/pdb44_1.html">calcium
						binding protein</ulink>.  The first step
					in the visualization process is
					generating a PQR file for use with PMV
					and APBS.  Please follow the directions
					in <xref linkend="pdb2pqr-subsect"/> to
					generate a PQR file for this structure.
				</para>

				<note>PMV has built-in PDB2PQR support; you can
					also generate PQRs on-the-fly from
					within PMV via the 
					<menuchoice>
						<guimenu>Compute</guimenu>
						<guisubmenu>Electrostatics</guisubmenu>
					</menuchoice> sub-menu. </note>

				<para> Load the PQR you created into PMV
					(<menuchoice> <guimenu>File</guimenu>
						<guimenuitem>Read Molecule</guimenuitem>
					</menuchoice>) and choose your favorite
					representation (<menuchoice>
						<guimenu>Display</guimenu>
				</menuchoice>). </para>
			</sect2>

			<sect2> <title>Performing the electrostatics calculation</title>

				<para>Go to the 
					<menuchoice> <guimenu>Compute</guimenu>
						<guisubmenu>Electrostatics</guisubmenu>
						<guimenuitem>Compute Potential
							Using
							APBS</guimenuitem>
					</menuchoice> menu.  APBS is bundled
					with PMV; this calculation should work
					without any addition
					configuration.</para>

				<para>Additional settings for custom
					electrostatics calculations are
					available under the 
					<menuchoice> <guimenu>Compute</guimenu>
						<guisubmenu>Electrostatics</guisubmenu>
					</menuchoice> sub-menu.  In particular,
					<menuchoice> <guimenu>Compute</guimenu>
						<guisubmenu>Electrostatics</guisubmenu>
						<guimenuitem>Preferences</guimenuitem>
					</menuchoice> 
					allows users to configure settings for
					custom APBS and PDB2PQR paths and
					behaviors (force fields, etc.).
					Additionally,
					<menuchoice> <guimenu>Compute</guimenu>
						<guisubmenu>Electrostatics</guisubmenu>
						<guimenuitem>Setup</guimenuitem>
					</menuchoice> 
					allows users to customize the
					invocation of APBS by setting ion
					concentrations, grid spacings, etc.
					Many of these options are
					self-explanatory and/or described in
					more detail in the <ulink
						url="user-guide/index.html">APBS
						User Manual</ulink>.  For most
					visualization applications, the default
					settings should be appropriate.</para>

			</sect2>

			<sect2> <title>Visualizing the electrostatic potential</title>

				<sect3> <title>Surface potentials</title>
					<para>The surface potential can be
						displayed from the 
						<menuchoice> 
							<guimenu>Compute</guimenu>
							<guisubmenu>Electrostatics</guisubmenu>
							<guimenuitem>Map Potential to Surface </guimenuitem>
						</menuchoice>
						menu item.  PMV uses a very
						interesting method for plotting
						the potential.  In particular,
						it maps the potential at some
						distance away from the surface
						to the molecular surface.  This
						has the advantages of the
						"global" electrostatic
						properties from the solvent
						accessible surface potential
						maps while preserving the shape
						information provided by the
						molecular surface.  The
						distance from the surface can
						be controlled by the
						<guilabel>"Distance from
							surface"</guilabel>
						dial in the PMV <guilabel>Map
							Potential to
							Surface</guilabel>
						window.</para>
				</sect3>

			</sect2>
			-->


			<warning><para>Under construction -- surfaces are
					currently broken with some PQR
					structure/force field
					combinations.</para></warning>

		</sect1>

	</chapter>

	<chapter id="solvation-sect"> <title>How do I calculate a solvation
energy?</title>

		<para>
			Solvation energies are usually decomposed into a free
			energy cycle as shown in <xref
				linkend="solvation-cycle-full"/>.  Note that
			such solvation energies often performed on fixed
			conformations; as such, they are more correctly called
			"potentials of mean force".  More details on using APBS
			for the polar and nonpolar portions of such a cycle are
			given in the following sections.
			<figure id="solvation-cycle-full"> <titleabbrev>Full
					solvation energy cycle</titleabbrev>
				<title>Full solvation energy cycle.  This cycle
incorporates several processes into the solvation energy (step 1).  Step 2
indicates charging of the solute in solution (e.g., inhomogeneous dielectric,
ions present).  Step 3 indicates the introduction of attractive solute-solvent
dispersive interaction interactions (e.g., an integral of
Weeks-Chandler-Andersen interactions over the solvent-accessible volume).  Step
4 indicates the introduction of repulsive solute-solvent interaction (e.g.,
cavity formation).  Steps 5 and 6 are basically null steps although they could
be used to offset unwanted energies added in Steps 3 and 4 above.  Finally,
Step 6 represents the charging of the solute in a vacuum or homogeneous
dielectric environment in the absence of mobile ions.</title>
				<graphic
					fileref="images/solvation-cycle-full.png"></graphic>
			</figure>
		</para>

		<sect1> <title>Polar solvation</title>
			<para> The full free energy cycle in <xref
					linkend="solvation-cycle-full"/> is
				usually decomposed into polar and nonpolar
				parts.  The polar portion is usually
				represented by the charging energies in Steps 2
				and 6:
				<informalequation>
					<graphic
						fileref="images/polar-solvation-equation.png"/>
				</informalequation>
				Energies returned from APBS electrostatics
				calculations are charging free energies.
				Therefore, to calculate the polar contribution
				to the solvation free energy, we simply need to
				setup two calculations corresponding to Steps 2
				and 6 in <xref
					linkend="solvation-cycle-full"/>.
				However, the electrostatic charging free
				energies returned by APBS include
				self-interaction terms.  These are the energies
				of a charge distribution interacting with
				itself.  Such self-interaction energies are
				typically very large and extremely sensitive to
				the problem discretization (grid spacing,
				location, etc.).  Therefore, it is very
				important that the two calculations are
				performed with identical grid spacings,
				lengths, and centers, in order to ensure
				appropriate matching (or "cancellation") of
				self-energy terms.
			</para>
			<para> One of the canonical examples for polar
				solvation is the Born ion:  a nonpolarizable
				sphere with a single charge at its center
				surrounded by an aqueous medium.  In the
				absence of external ions, the polar solvation
				energy for this sytem is given by <xref
					linkend="born-solvation-energy-equation"/>.
				<equation id="born-solvation-energy-equation">
					<title>Born ion polar solvation energy.
					q is the ion charge, a is the ion
radius, and the two epsilons denote the internal and external (solution)
dielectric constants.  This model assumes zero ionic strength.</title>
					<titleabbrev>Born ion polar solvation energy</titleabbrev>
					<graphic fileref="images/born-solvation-energy-equation.png"/>
				</equation>
				We can setup a PQR file for the Born ion for
				use with APBS as shown in <xref
					linkend="born-pqr"/> and downloaded
				<ulink url="examples/born/born.pqr">here</ulink>.
				<example id="born-pqr"> <title>Born ion PQR</title>
					<programlisting>
REMARK  This is an ion with a 3 A radius and a +1 e charge
ATOM      1   I  ION     1 0.000   0.000   0.000  1.00 3.00
					</programlisting>
				</example>
				We're interested in performing two APBS
				calculations for the charging free energies in
				homogeneous and heterogeneous dielectric
				coefficients.  We'll assume the internal
				dielectric coefficient is 1 (e.g., a vacuum)
				and the external dielectric coefficient is
				78.54 (e.g., water).
				for these settings, the polar solvation energy
				expression has the form
				<informalequation>
					<graphic fileref="images/born-solvation-energy-equation2.png"/>
				</informalequation>
				where R is the ion radius
				in Angstroms.  One possible APBS input file for
				this calculation is shown in <xref
					linkend="born-input"/> and can be
				downloaded <ulink
					url="examples/born/born.in">here</ulink>.
				<example id="born-input">
					<title>Example born input file</title>
					<programlisting>
# READ IN MOLECULES
read
  mol pqr born.pqr
end


elec name solv # Electrostatics calculation on the solvated state
	mg-manual # Specify the mode for APBS to run
	dime 97 97 97 # The grid dimensions
	nlev 4 # Multigrid level parameter
	grid 0.33 0.33 0.33 # Grid spacing
	gcent mol 1 # Center the grid on molecule 1
	mol 1 # Perform the calculation on molecule 1
	lpbe # Solve the linearized Poisson-Boltzmann equation
	bcfl mdh # Use all multipole moments when calculating the potential
	pdie 1.0 # Solute dielectric
	sdie 78.54 # Solvent dielectric
	chgm spl2 # Spline-based discretization of the delta functions
	srfm mol # Molecular surface definition
	srad 1.4 # Solvent probe radius (for molecular surface)
	swin 0.3 # Solvent surface spline window (not used here)
	sdens 10.0 # Sphere density for accessibility object
	temp 298.15 # Temperature
	calcenergy total # Calculate energies
	calcforce no # Do not calculate forces
end

elec name ref # Calculate potential for reference (vacuum) state
	mg-manual
	dime 97 97 97
	nlev 4
	grid 0.33 0.33 0.33
	gcent mol 1
	mol 1
	lpbe
	bcfl mdh
	pdie 1.0
	sdie 1.0
	chgm spl2
	srfm mol
	srad 1.4
	swin 0.3
	sdens 10.0
	temp 298.15
	calcenergy total
	calcforce no
end

# Calculate solvation energy
print energy solv - ref end

quit
					</programlisting>
				</example>
				Running this example with a recent version of
				APBS should give an answer of -229.59 kJ/mol
				which is in good agreement with the -230.62
				kJ/mol predicted by the analytic formula above.
			</para>
			<para> 
				Note that the Born example above can be easily
				generalized to other polar solvation energy
				calculations.  For example, ions could be added
				to the <literal>solv</literal>
				<varname>ELEC</varname> section, dielectric
				constants could be modified, surface
				definitions could be changed (in both
				<varname>ELEC</varname> sections!), or more
				complicated molecules could be examined.  Many
				of the examples included with APBS (e.g.,
				<filename>solv</filename> and
				<filename>ionize</filename>) also demonstrate
				solvation energy calculations.  
			</para>
			<note>
				<para>Note that, as molecules get larger, it is
					important to examine the sensitivity of
					the calculated solvation energies with
					respect to grid spacings and
					dimensions.</para>
			</note>
		</sect1>

		<sect1> <title>Apolar solvation</title>
			<warning><para>Under construction</para></warning>
		</sect1>

	</chapter>

	<chapter id="binding-sect">
		<title>How do I calculate a binding energy?</title>

		<para> In general, implicit solvent models are used to
			calculation the contribution of
			<emphasis>solvation</emphasis> to binding free
			energies.  Additional binding free energy contributions
			(molecular mechanics energies, entropic changes, etc.)
			must be calculated separately and are not discussed in
			this tutorial.  One exception is the inclusion of
			intermolecular Coulombic interations; we'll discuss how
			these can be calculated in APBS <link
				linkend="binding-coulomb">below</link>. </para>

		<para> Our framework for calculating solvation contributions to
			binding free energies is shown in <xref
				linkend="binding-cycle"/>.
			<figure id="binding-cycle">
				<title> Binding free energy cycle illustrating
				binding in terms of transfer free energies from
				a homogeneous dielectric environment (where
				interactions are described by Coulomb's law) to 
				an inhomogeneous dielectric environment with
				differing internal (green) and external (cyan)
				dielectric constants.  The binding
				(dissociation) free energy is depicted in Step
				3.</title>
				<titleabbrev> Binding free energy cycle
				</titleabbrev>
				<graphic fileref="images/binding-cycle.png"/>
			</figure>
			The binding free energy is given by <xref
				linkend="binding-cycle-eqn"/>.
			<equation id="binding-cycle-eqn"> 
				<title> Binding free energy formula based on
					<xref linkend="binding-cycle"/>. </title>
				<titleabbrev> Binding free energy formula
				</titleabbrev>
				<graphic
					fileref="images/binding-cycle-eqn.png"/>
			</equation>
			The following sections provide more detail on
			calculating individual terms of this equation.
		</para>

		<sect1 id="binding-solvation">
			<title> Solvation energy contributions to binding
			</title>
			<para> If we're just interested in calculating the solvation
				contributions to binding (steps 4 and 2 in <xref
					linkend="binding-cycle"/>), then we simply need
				to follow the instructions from <xref
					linkend="solvation-sect"/> for the complex and
				isolated components.  The solvation energy contribution
				to the binding is then given by <xref
					linkend="binding-solvation-eq"/>.  
				<equation id="binding-solvation-eq">
					<title> Solvation contributions to the binding
						free energy for a two-component complex
						of molecules "mol 1" and "mol 2".
						Refer to <xref
						linkend="binding-cycle"/> for numbering.</title>
					<titleabbrev> Solvation contributions to the binding
						free energy </titleabbrev>
					<graphic
						fileref="images/binding-solvation.png"/>
				</equation>
				This solvation energy contribution can be decomposed
				into polar and nonpolar parts as outlined in <xref
					linkend="solvation-sect"/>.
			</para>

		</sect1>
	
		<sect1 id="binding-coulombic"> 

			<title>Including Coulombic contributions</title>

			<para id="binding-coulomb"> To complete the binding
				free energy cycle (see <xref
					linkend="binding-cycle"/>), we need to add
				intermolecular Coulombic contributions to the
				solvation energy change upon binding to get the
				total electrostatic/solvent contribution to the
				binding free energy.  In particular, we're
				interested in the change in Coulombic
				electrostatic energy upon binding, as given by
				<xref linkend="binding-coulomb-eq"/>.
				<equation id="binding-coulomb-eq">
					<title> Coulombic contributions to the binding
						free energy for a two-component complex
						of molecules "mol 1" and "mol
						2".  See <xref
						linkend="binding-cycle-eqn"/>
						for numbering.</title>
					<titleabbrev> Coulombic contributions to the binding
						free energy </titleabbrev>
					<graphic
						fileref="images/binding-coulomb.png"/>
				</equation>
				Each of the &#916;G<subscript>coul</subscript>
				quantities in <xref
					linkend="binding-coulomb-eq"/> is the
				sum of pairwise Coulombic interactions between
				all atoms in the molecule (or complex)
				<emphasis>for a particular uniform
					dielectric</emphasis>.  In order to
				combine these Coulombic binding energies with
				the solvation energies described <link
					linkend="binding-solvation">above</link>,
				we need to make sure consistent dielectric
				constants are used.  In particular, Coulombic
				interactions should be calculated using the
				same uniform dielectric constant as the
				reference state of the solvation energy above.
				For example, if solvation energies are
				calculated for transfering a protein from a
				medium with uniform dielectric of
				&#949;<subscript>in</subscript>
				to a medium with internal dielectric
				&#949;<subscript>in</subscript>
				and external dielectric 
				&#949;<subscript>out</subscript>, 
				then Coulombic energies should
				be calculated using a dielectric of
				&#949;<subscript>in</subscript>.
				The APBS accessory program
				<filename>tools/manip/coulomb</filename> was
				created to help with the calculation of these
				individual per-molecule Coulombic energies.
				Given a PQR file as input, the
				<filename>tools/manip/coulomb</filename>
				program calculates Coulombic energies for a
				vacuum dielectric (e.g., a uniform dielectric
				of 1).  If the reference dielectric is
				&#949;<subscript>in</subscript>, then all
				energies returned by 
				<filename>tools/manip/coulomb</filename>
				need to be divided by 
				&#949;<subscript>in</subscript>.
			</para>
			<para>
				With the appropriate dielectric constant of
				&#949;<subscript>in</subscript> used
				for the Coulombic binding energy, a total
				electrostatic/solvation free energy can be
				calculated from <xref
					linkend="binding-cycle-eqn-2"/>.
				<xref linkend="binding-cycle-eqn"/>, 
				<xref linkend="binding-solvation-eq"/>, and
				<xref linkend="binding-coulomb-eq"/> as
				<equation id="binding-cycle-eqn-2">
					<title> Binding free energy </title>
					<graphic
						fileref="images/binding-cycle-eqn-2.png"/>
				</equation>
			</para>

		</sect1>

		<sect1 id="binding-ligand">
			<title>Hey! You don't have any parameters for my ligand!</title>

			<warning><para>Under construction</para></warning>

		</sect1>

		<sect1 id="binding-example">
			<title>A ligand binding example</title>

			<warning><para>Under construction</para></warning>

		</sect1>

	</chapter>

	<chapter id="forces-sect"> <title>How do I calculate solvation
forces?</title>

		<warning><para>Under construction</para></warning>

		<sect1> <title>Polar solvation</title>
			<warning><para>Under construction</para></warning>
		</sect1>

		<sect1> <title>Apolar solvation</title>
			<warning><para>Under construction</para></warning>
		</sect1>

	</chapter>

	<chapter id="pka-sect"> <title>How do I calculate a pK<subscript>a</subscript>?</title>
		<warning><para>Under construction</para></warning>
	</chapter>

	<chapter id="parallel-sect"> <title>My calculation requires too much memory!</title>
		<para> APBS requires approximately 200 B memory per grid point.
			Memory usage can be predicted before performing the
			calculations using the <filename>tools/manip/psize.py</filename>
			Python script provided with APBS. </para>
		<para>  If it appears your calculation is going to require more
			memory than is currently available on your system, you
			have a few options:
		</para>
		<itemizedlist>
			<listitem>
				<para>APBS calculations can be performed in
					parallel across multiple processors
					(hopefully, sharing distributed
					memory!).  This functionality is
					provided by the
					<literal>mg-para</literal> keyword
					which is described in more detail in
					the APBS user manual and <link
						linkend="parallel">below</link>.  
				</para>
			</listitem>
			<listitem>
				<para>APBS calculations can be broken into a
					series of smaller, asynchronous runs
					which (individually) require less
					memory.  This functionality is provided
					by the <literal>mg-para</literal>
					<literal>async</literal> keyword
					which is described in more detail in
					the APBS user manual and <link
						linkend="async">below</link>.  
				</para>
			</listitem>
			<listitem>
				<para>
					Submit your calculations through <link
						linkend="gemstone-sect">Gemstone</link>
					to external computational resources.
				</para>
			</listitem>
		</itemizedlist>

		<sect1 id="parallel"> <title>Parallel calculations:  an example</title>
			<para>
				The actin dimer example provided with the APBS
				source code
				(<filename>examples/actin-dimer/complex.pqr</filename>)
				is a fairly large system and a good example for
				parallel focusing calculations.  This example
				will use the actin dimer complex PQR file
				<filename><ulink
						url="examples/parallel/complex.pqr">complex.pqr</ulink></filename>.
			</para>
			<para>  We're going to use an 8-processor parallel
				calculation to write out the electrostatic
				potential map for this complex.  Each processor
				will solve a portion of the overall problem
				using the parallel focusing method (see <ulink
					url="http://dx.doi.org/10.1073/pnas.181342398">Baker
					et al, PNAS, 2001</ulink>) on a
				97<superscript>3</superscript> mesh with 20%
				overlap between meshes for neighboring
				processors.  An example input file for this
				calculation might look like (download <ulink
					url="examples/parallel/apbs.in">here</ulink>):
				<programlisting id="mg-para.in">
read 
    mol pqr complex.pqr
end

elec name complex
    mg-para
    ofrac 0.1
    pdime 2 2 2
    dime  97  97  97
    fglen 150 115 160
    cglen 156 121 162
    cgcent mol 1
    fgcent mol 1
    mol 1
    npbe
    bcfl sdh
    ion 1 0.150 2.0
    ion -1 0.150 2.0 
    pdie 2.0
    sdie 78.54
    srfm mol
    chgm spl0
    srad 1.4
    swin 0.3
    sdens 10.0
    temp 298.15
    gamma 0.105
    calcenergy total
    calcforce no
    write pot dx pot
end

quit
				</programlisting>
				where the <literal>pdime 2 2 2</literal>
				specifies the 8-processor array dimensions, the
				<literal>ofrac 0.1</literal> specifies the 20%
				overlap between processor calculations, and the
				<literal>dime 97 97 97</literal> specifies the
				size of <emphasis>each processor's</emphasis>
				calculation.  The <literal>write pot dx
					pot</literal> instructs APBS to write
				out <ulink
					url="&ugurl;#opendx-format">OpenDX-format</ulink>
				maps of the potential to 8 files
				<filename>pot#.dx</filename>, where
				<literal>#</literal> is the number of the
				particular processor.
			</para>
			<para>
				Running this input file with an MPI-compiled version
				of APBS runs 8 parallel focusing calculations,
				with each calculation generating fine-scale
				solutions on a different region of the
				(<literal>fglen</literal>) problem domain.
				Note that 8 separate OpenDX files are written
				by the 8 processors used to perform the
				calculation.  Writing separate OpenDX files
				allows us to avoid communication in the
				parallel run and keeps individual file sizes
				(relatively) small.  Additionally, if a user is
				interested in a specific portion of the problem
				domain, only a few files are needed to get
				local potential information.
			</para>
			<para>
				However, most users are interested in global
				potentials.  For some programs (<ulink
					url="http://opendx.org">OpenDX</ulink>,
				<ulink
					url="http://www.visualdatatools.com/">DataTank</ulink>),
				the individual potential files can simply be
				read into the program separately and the
				program will reconstruct the global map.
				Most other programs will require the user to
				reassemble the global map first; APBS provides
				the <filename><ulink
						url="&ugurl;">mergedx</ulink></filename>
				program for this purpose.
				<filename>mergedx</filename> is a simple
				program that allows users to combine several
				OpenDX files from a parallel focusing
				calculation into a single map.  This map can be
				downsampled from the original resolution to
				provide coarser datasets for fast
				visualization, etc.
				For example, the command
				<screen>
<prompt>$</prompt> mergedx 65 65 65 pot0.dx pot1.dx pot2.dx pot3.dx pot4.dx pot5.dx pot6.dx pot7.dx
				</screen>
				will generate a file
				<filename>gridmerged.dx</filename>
				which has downsampled the much larger dataset
				contained in the 8 OpenDX files into a
				65<superscript>3</superscript> file which
				would be suitable for rough visualization.  An
				example of the <filename>mergedx</filename>
				output (see <xref linkend="vmd-isocontour"/>
				for methods) is shown in 
				<figure> <title>Actin dimer isocontours from
parallel focusing</title>
					<graphic fileref="images/actin_dimer-iso_trans.jpg"></graphic>
				</figure>
				Note that downsampling isn't necessary -- and
				often isn't desirable for high quality
				visualization or quantitative analysis.
			</para>
		</sect1>

		<sect1 id="async"> <title>Asynchronous sequential calculations</title>
			<para>
				The steps described in the <link
					linkend="parallel">previous
					section</link> can also be performed
				for systems or binaries which are not equipped
				for parallel calculations via MPI.  In
				particular, you can add 
				<screen>
<userinput>async</userinput> <parameter>n</parameter>
				</screen>
				to the <literal>ELEC</literal>
				<literal>mg-para</literal> APBS input file to
				make the single-processor calculation
				masquerade as processor
				<parameter>n</parameter> of a parallel
				calculation.  
			</para>
			<para>
				Scalar maps from asynchronous APBS calculations
				can be combined using the
				<filename>mergedx</filename> program as
				described above.  Currently, energies and
				forces from asynchronous APBS calculations need
				to merged manually (e.g., summed) from the
				individual asynchronous calculation output.
				This can be accomplished by simple shell
				scripts.
			</para>
			<para>
				As a specific example, we can modify the <link
					linkend="mg-para.in">input file
					above</link> to include a
				<literal>async 0</literal> command in the ELEC
				statement and thus cause APBS to perform the
				operations of the first processor in the
				parallel focusing calculation.  The modified
				input file (available for download <ulink
					url="examples/parallel/apbs-async.in">here</ulink>)
				should look like:
				<programlisting id="mg-para-async.in">
read 
    mol pqr complex.pqr
end

elec name complex
    mg-para
    ofrac 0.1
    pdime 2 2 2
    async 0
    dime  97  97  97
    fglen 150 115 160
    cglen 156 121 162
    cgcent mol 1
    fgcent mol 1
    mol 1
    npbe
    bcfl sdh
    ion 1 0.150 2.0
    ion -1 0.150 2.0 
    pdie 2.0
    sdie 78.54
    srfm mol
    chgm spl0
    srad 1.4
    swin 0.3
    sdens 10.0
    temp 298.15
    gamma 0.105
    calcenergy total
    calcforce no
    write pot dx pot
end

quit
				</programlisting>
				This should create an OpenDX-format potential
				map called <filename>pot.dx</filename>,
				corresponding to the output from processor 0 in
				a parallel focusing calculation.  Performing
				additional APBS calculations with
				<literal>async 1</literal>,
				<literal>async 2</literal>,
				...,
				<literal>async 7</literal>
				will generate the corresponding OpenDX maps for
				the remaining processors of the parallel
				focusing calculations.  These can then be
				reassembled with <filename>mergedx</filename>
				as described above.
			</para>
		</sect1>

	</chapter>

	<chapter id="simulation-sect"> <title>How do I use APBS with my
molecular dynamics program (for MM/PBSA, etc.)?</title>
		<warning><para>Under construction</para></warning>
	</chapter>

	<chapter id="gemstone-sect"> <title>Can I run APBS via the web?  (Gemstone) </title>

		<para>Yes, you can run APBS via the web, thanks to the <ulink
				url="http://gemstone.mozdev.org">Gemstone</ulink>
			service.  This section demonstrates how <ulink
				url="http://gemstone.mozdev.org">Gemstone</ulink>
			can be used to perform most APBS calculations commonly
			done through the command-line interface.  Better yet,
			it allows you to use <ulink
				url="http://nbcr.net">NBCR's</ulink> resources
			instead of your own!  
		</para>

		<sect1> <title>Getting Gemstone</title>
			<para> You need to download and install the Gemstone
				extension for the <ulink
					url="http://www.mozilla.com/firefox/">Firefox</ulink>
				web browser from <ulink
					url="http://gemstone.mozdev.org">http://gemstone.mozdev.org</ulink>
				before starting this tutorial.</para>
		</sect1>

		<sect1> <title>Preparing a structure with PDB2PQR</title>
			<para> We'll start by preparing a structure with <ulink
					url="http://pdb2pqr.sf.net">PDB2PQR</ulink>.
				First, you need to download a PDB file from the
				<ulink url="http://www.pdb.org">Protein Data
					Bank</ulink>.  For the purposes of this
				example, we'll use <ulink
					url="http://www.pdb.org/pdb/navbarsearch.do?newSearch=yes&amp;inputQuickSearch=1fas">1FAS</ulink>
				in PDB format (download directly <ulink
					url="http://www.pdb.org/pdb/downloadFile.do?fileFormat=pdb&amp;compression=NO&amp;structureId=1FAS">here</ulink>).  </para>
			
			<para> Open the Gemstone interface through the Firefox
				menu <menuchoice> <guimenu>Tools</guimenu>
					<guimenuitem>Gemstone</guimenuitem>
					</menuchoice>.  Select the PDB2PQR
					application through the Gemstone menu
					<menuchoice> <guimenu>Utils</guimenu>
						<guimenuitem>PDB2PQR</guimenuitem>
					</menuchoice> on the righthand side of
					the Gemstone screen.  Select the PDB
					file you just downloaded and any other
					options for PDB2PQR of interest.  Your
					screen should look something like:
					<figure> <title>Gemstone PDB2PQR calculation</title>
						<graphic fileref="images/gemstone-pdb2pqr.png"></graphic>
					</figure>
					Go ahead and "Run" the Gemstone
					calculation, check the
					<filename>stdOut</filename> and
					<filename>stdErr</filename> for any
					warning messages, and download the
					resulting PQR file.  </para>

			</sect1>

			<sect1> <title>Perform an electrostatics calculation with APBS</title>
				
				<para>We're now ready to perform an APBS
					calculation of the 1FAS electrostatic
					potential through Gemstone.  Open the
					<menuchoice> 
						<guimenu>Chemistry</guimenu> 
						<guimenuitem>Apbs</guimenuitem> 
					</menuchoice>
					menu on the righthand side of the
					Gemstone screen.  We'll step through
					each of the input tabs in the middle
					pane in the following sections.
				</para>

				<sect2> <title>Calculation</title>
					<para>Move to the Calculation tab in
						the middle pane.</para>
					<para>Most of the "Mathematics"
						settings can be left as-is;
						however, feel free to play with
						the discretization and surface
						definitions to see how it
						affects your results.</para>
					<para>Under "Molecules", load the 1FAS
						PQR file you just prepared in
						the previous section.</para>
					<para>Don't select anything under
						"Energy and Force" for this
						calculation.</para> <para>At
						this point, your screen should
						look something like this:
						<figure> <title>Gemstone APBS/Calculation screen</title>
							<graphic fileref="images/gemstone-apbs-calculation.png"/>
						</figure>
					</para>
				</sect2>

				<sect2> <title>Grid</title>
					<para>Next, move to the Grid tab in the
						middle pane.</para>
					<para>Under "General", enter 97 for X,
						Y, and Z "Grid points".</para>
					<para>Under "Coarse Grid", choose 100
						for all X, Y, and Z "Lengths".
						Center the mesh on the
						molecule.</para>
					<para>Under "Fine Grid", choose 80 for
						all X, Y, and Z "Lengths".
						Center the mesh on the
						molecule.</para>
					<para>Leave the "Parallel Execution"
						alone for this
						calculation.</para>
					<para>At this point, your screen should
						look something like this:
						<figure> <title>Gemstone APBS/Grid screen</title>
							<graphic fileref="images/gemstone-apbs-grid.png"/>
						</figure>
					</para>
				</sect2>

				<sect2> <title>Physics</title>
					<para>Next, move to the Physics tab in
						the middle pane.</para>
					<para>Choose any values you like here;
						the defaults should be fine for
						most visualization
						calculations.</para>
					<para>At this point, your screen should
						look something like this:
						<figure> <title>Gemstone APBS/Physics screen</title>
							<graphic fileref="images/gemstone-apbs-physics.png"/>
						</figure>
					</para>
				</sect2>

				<sect2> <title>File I/O </title>
					<para>Next, move to the File I/O tab in
						the middle pane.</para>
					<para>Unless you have other properties
						you wan to visualize, you can
						leave these settings
						as-is.</para>
					<para>At this point, your screen should
						look something like this:
						<figure> <title>Gemstone APBS/File I/O screen</title>
							<graphic fileref="images/gemstone-apbs-file.png"/>
						</figure>
						</para>
				</sect2>
							
			<sect2> <title>Running the calculation</title>
				<para>Finally, return to the Calculation tab
					and select "Run APBS".  After a while,
					the results will appear under the
					Output tab in the middle pane.  When
					the run is complete, you should see
					something like this:
					<figure> <title>Gemstone APBS/Calculation screen (run complete)</title>
						<graphic fileref="images/gemstone-apbs-finished.png"/>
					</figure>
					In particular, you should have the
					option to save the potential file
					calculated in this APBS run.  </para>
			</sect2>
			<sect2> <title>Other calculations</title>
				<para>Nearly all of the examples in this
					tutorial can also be performed with
					Gemstone.  Furthermore, input files can
					be uploaded to use Gemstone as a
					"portal" to web services at other
					institutions. </para>
			</sect2>
		</sect1>
	</chapter> 

	<chapter id="more-sect"> <title>More examples...</title>
		<para> In addition to the relatively simple applications
			presented here, there are a number of additional
			examples distributed with the APBS software package
			(<ulink url="&apbsurl;">&apbsurl;</ulink>) which
			include ionization energies, protein-protein
			interactions, parallel calculations, etc.  </para>
	</chapter>

	<chapter id="help-sect"> <title>None of this answered my question...</title>
		<para>Please visit the <ulink
				url="http://lists.sourceforge.net/mailman/listinfo/apbs-users">APBS-users
				mailing list</ulink>.  After you've looked for
			the answer to your question in the <ulink
				url="http://sourceforge.net/mailarchive/forum.php?forum_id=46597">archive</ulink>,
			please post it to the mailing list. </para>
	</chapter>


</book>

