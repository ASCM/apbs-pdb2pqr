<chapter id="born-sect"> <title>The Born ion</title>
  <para>
    The Born ion is the canonical electrostatics example; a non-polarizable
    sphere embedded in a higher-dielectric medium.  Due to the spherical
    symmetry of this example, analytical solutions exist for a number of
    observables.  In this example, we're going to examine the change in
    polar solvation energy and electrostatic potential for Born ions of
    various radii.
  </para>

  <sect1> <title>PQR file</title>
    <para>
      First, we'll look at an example PQR file which provides the molecular
      information (coordinates, charges, and radii) to the electrostatics
      software.  Everything an implicit solvent electrostatics software
      package needs to know about the molecule is specified here.  The PQR
      file is simply a modified version of the standard 
      <ulink url="http://www.rcsb.org/pdb/docs/format/pdbguide2.2/guide2.2_frame.html">PDB
      format</ulink>.  This means that PQR files can be read into most
      molecular visualization programs.
      <example> <title>Example PQR file</title>
        <programlisting>
REMARK  This is an ion with a 3 A radius and a +1 e charge
ATOM      1   I  ION     1       0.000   0.000   0.000  1.00 3.00
        </programlisting>
        <para>
          This example PQR file gives an ion located at (0, 0, 0) with a +1
          e charge and a 3 A radius.  It can be downloaded 
          <ulink url="examples/born/example-ion.pqr">here</ulink> and loaded
          into VMD with the command:
          <screen>
            <prompt>$</prompt> <userinput>vmd -pdb ion.pqr</userinput>
          </screen>
        </para>
      </example>
    </para>
  </sect1>

  <sect1> <title>Calculation input</title>
    <para>
      The APBS input file provides the parameters used in Poisson or
      Poisson-Boltzmann electrostatics calculations.  The basic ingredients
      of an electrostatics calculation are listed in the following table.  
      <important>
        <para> The detailed format of the input file is discussed in the
          APBS manual (<ulink url="http://apbs.sourceforge.net/doc">http://apbs.sourceforge.net/doc</ulink>).
        </para>
      </important>
      <table frame="all"> <title>Basic APBS input parameters</title>
        <tgroup cols="3">
          <thead>
            <row>
              <entry>Parameter description</entry>
              <entry>APBS variable names</entry>
              <entry>Common values</entry>
            </row>
          </thead>
          <tbody>
            <row>
              <entry>Grid dimensions</entry>
              <entry><varname>dime</varname></entry>
              <entry>65, 97, 127, 161</entry>
            </row>
            <row>
              <entry>Grid spacing or length</entry>
              <entry>
                <varname>grid</varname> or
                [ <varname>fglen</varname> | <varname>cglen</varname> | 
                <varname>glen</varname> ]
              </entry>
              <entry>Grid spacings should be 0.5 A or smaller for
                quantitative calculations; grid lengths should be large
                enough for the boundary conditions to hold.
              </entry>
            </row>
            <row>
              <entry>Grid position</entry>
              <entry>
                [ <varname>gcent</varname> | <varname>fgcent</varname> |
                <varname>cgcent</varname> ] 
              </entry>
              <entry>The position of the grid center should coincide with
                the region of interest of the system; 
                <foreignphrase>e.g.</foreignphrase>, a binding site, etc.
              </entry>
            </row>
            <row>
              <entry>Boundary condition definition</entry>
              <entry><varname>bcfl</varname></entry>
              <entry>The most common setting is <varname>sdh</varname> which
                considers only the monopole moment of the system when
                assigning boundary conditions.  The much slower
                <varname>mdh</varname> option considers all multipole
                moments of the protein but assumes non-interacting spheres
                (thereby only approximately describing the solvation
                behavior).
              </entry>
            </row>
            <row>
              <entry>Dielectric constants</entry>
              <entry>
                <varname>sdie</varname> for the solvent and
                <varname>pdie</varname> for the biomolecule.
              </entry>
              <entry>The common dielectric value for water at 300 K is 78.54
                (~80).  Biomolecular dielectric constants range from 2
                (electronic polarization only) to 20 (implicit side chain
                relaxation) with the specific value dependent on the
                application.
              </entry>
            </row>
            <row>
              <entry>Temperature</entry>
              <entry><varname>temp</varname></entry>
              <entry>The temperature of the calculation; should be chosen
                consistently with the dielectric coefficients.
              </entry>
            </row>
            <row>
              <entry>Ion species and concentrations</entry>
              <entry><varname>ion</varname></entry>
              <entry>Specify the concentrations, charges, and radii of the
                mobile ion species to be included in the Poisson-Boltzmann
                calculation.
              </entry>
            </row>
            <row>
              <entry>Coefficient (surface) definitions</entry>
              <entry>
                <varname>srfm</varname>, <varname>srad</varname>,
                <varname>swin</varname>
              </entry>
              <entry>These parameters determine the surfaces used to define
                the dielectric and ion accessiblity coefficients.  As
                described in numerous articles, the results of PBE
                calculations can be very sensitive to the surface
                definition.  These should be chosen consistently for each
                calculation -- and the results should be examined for their
                dependence on the particular surface definition used.
              </entry>
            </row>
          </tbody>
        </tgroup>
      </table>
    </para>
    <para>
      For the Born ion, we will be running a series of calculations on
      ions of different radii.  However, in order to make a meaningful
      comparison of the results, <emphasis>these calculations will all be
        performed with the same parameters!</emphasis>  Specifically, we
      will be using a common input file which is given below and available
      <ulink url="examples/born/example-input.in">here</ulink>.
    </para>
    <para>
      The major elements of this calculation are:
      <orderedlist>
        <listitem> 
          <para>Read in the molecular data.</para> 
        </listitem>
        <listitem> 
          <para>Calculate the electrostatic potential and energy in the
            solvated state.</para> 
        </listitem>
        <listitem>
          <para>Calculate the electrostatic potential and energy in the
            reference (vacuum) state to remove self-energies, etc.</para>
        </listitem>
        <listitem>
          <para>Compute the energy change.</para>
        </listitem>
      </orderedlist>
      <example> <title>Born ion APBS input file</title>
        <programlisting>          
          <![CDATA[
# READ IN MOLECULES
read 
  mol pqr ion-RADIUS.pqr 
end


elec name solv             # Electrostatics calculation on the solvated state

  mg-manual              # Specify the mode for APBS to run
  dime 97 97 97          # The grid dimensions
  nlev 4                 # Multigrid level parameter
  grid 0.33 0.33 0.33    # Grid spacing
  gcent mol 1            # Center the grid on molecule 1
  mol 1                  # Perform the calculation on molecule 1
  lpbe                   # Solve the linearized Poisson-Boltzmann 
                         # equation
  bcfl mdh               # Use all multipole moments when calculating the
                         # potential
  pdie 1.0               # Solute dielectric
  sdie 78.54             # Solvent dielectric
  chgm spl2              # Spline-based discretization of the delta
                         # functions
  srfm mol               # Molecular surface definition
  srad 1.4               # Solvent probe radius (for molecular surface)
  swin 0.3               # Solvent surface spline window (not used here)
  sdens 10.0             # Sphere density of accessibility object
  temp 298.15            # Temperature 
  gamma 0.105            # Apolar energy surface coefficient (not used here)
  calcenergy total       # Calculate energies
  calcforce no           # Do not calculate forces
  write pot dx potential-RADIUS
                         # Write out the potential

end


elec name ref              # Calculate potential for reference (vacuum) state

  mg-manual
  dime 97 97 97
  nlev 4
  grid 0.33 0.33 0.33
  gcent mol 1
  mol 1
  lpbe
  bcfl mdh
  pdie 1.0               # The solvent and solute dielectric constants are
                         # equal
  sdie 1.0               # The solvent and solute dielectric constants are
                         # equal
  chgm spl2
  srfm mol
  srad 1.4
  swin 0.3
  sdens 10.0
  temp 298.15
  gamma 0.105
  calcenergy total
  calcforce no

end

# Calculate solvation energy
print energy solv - ref end

quit
]]>
        </programlisting>          
      </example>
    </para>
  </sect1>

  <sect1> <title>Born solvation energies:  effect of radius</title>
    <para>
      This section presents the series of calculations that will be carried
      out to examine the effect of ion radius on electrostatic potential and 
      solvation energy.   Specifically, this generates a set of ions with
      different radii and uses APBS, together with the above input file, to
      solve Poisson's equation.
    </para>
    <para>
      This example uses a Bash shell script to run a series of APBS
      calculations and generate a series of Gnuplot graphs.  First, you will
      need to download the archive containing the Bash script and the template
      input files <ulink url="examples/born/born.tar.gz">here</ulink>.
    </para>
    <para>
      Once the input files are downloaded, they need to be extracted from the
      archive:
      <screen>
        <prompt>$</prompt> <userinput>gzip -dc born.tar.gz | tar xvf -</userinput>
      </screen>
    </para>
    <para>
      This script can then be executed by typing:
      <screen>
        <prompt>$</prompt> <userinput>bash runme.sh</userinput>
      </screen>
      While running, the script will generate a series of plots generated from
      the APBS output depicting the change in electrostatic potential as a
      function of distance from the ion center.  Of particular interest is the
      change in potential from the inside to the outside of the ion.  When
      finished, the run will generate a summary plot of solvation energy as a
      function of distance.  The total run time for this script was roughly
      6 minutes on a 2.2 GHz Intel Pentium 4.
    </para>
    <para>
      In addition to the graphical output, users should also examine the
      various files generated by the script, including:
      <variablelist>
        <varlistentry> 
          <term> <filename>apbs-##.in</filename> </term>
          <listitem> 
            <para> APBS input files for each radius (##) </para>
          </listitem>
        </varlistentry>
        <varlistentry> 
          <term> <filename>ion-##.pqr</filename> </term>
          <listitem> 
            <para> Ion PQR files for each radius (##) </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <filename>apbs-##.out</filename> </term>
          <listitem>
            <para> APBS output files for each radius (##) </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <filename>potential-##.dx</filename> </term>
          <listitem>
            <para> Raw OpenDX-format potential data for each radius (##)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <filename>potential-##-xaxis.dx</filename> </term>
          <listitem>
            <para> Potential data along x-axis for each radius (##)
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <filename>energy.dat</filename> </term>
          <listitem>
            <para> Solvation energies for each energy calculated
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </sect1>

</chapter>
