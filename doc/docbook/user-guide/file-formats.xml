<appendix id="format-sect"> <title>File formats</title>

  <para>This section introduces some of the input and output file formats which
    are used by APBS.</para>
  
  <sect1 id="pqr-format"> <title>PQR biomolecular structure format</title>
    <para>
      The PQR format is the primary input format for biomolecular structure in
      APBS package.  This format is a modification of the 
      <ulink url="http://www.rcsb.org/pdb/info.html#File_Formats_and_Standards">PDB format</ulink>
      which allows users to add charge and radius parameters to existing PDB data
      while keeping it in a format amenable to visualization with standard
      molecular graphics programs.  The origins of the PQR format are somewhat
      uncretain, but has been used by several computational biology software
      programs, including MEAD and AutoDock.  UHBD uses a very similar format
      called QCD.
    </para>
    <para>
      APBS reads very loosely-formatted PQR files:  all fields are
      whitespace-delimited, thereby allowing coordinates which are larger/smaller
      than &plusmn; 999 &Aring;.  
      <important>
        <para>
          The "cost" of this looser formatting is the inability of APBS to parse
          PQR files with chain IDs.  These fields need to be removed from PQR
          files before they are used with APBS.
        </para>
      </important>
    </para>
    <para>
      APBS reads data on a per-line basis from PQR files using the following
      format:
      <literallayout>
        <replaceable>Field_name</replaceable> <replaceable>Atom_number</replaceable> <replaceable>Atom_name</replaceable> <replaceable>Residue_name</replaceable> <replaceable>Residue_number</replaceable> <replaceable>X</replaceable> <replaceable>Y</replaceable> <replaceable>Z</replaceable> <replaceable>Charge</replaceable> <replaceable>Radius</replaceable>
      </literallayout>
      where the whitespace is the most important feature of this format.  The
      fields are:
      <variablelist>
        <varlistentry>
          <term> <replaceable>Field_name</replaceable> </term>
          <listitem>
            <para>A string which specifies the type of PQR entry and should
              either be <literal>ATOM</literal> or <literal>HETATM</literal> in
              order to be parsed by APBS.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Atom_number</replaceable> </term>
          <listitem>
            <para>
              An integer which provides the atom index.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Atom_name</replaceable> </term>
          <listitem>
            <para>
              A string which provides the atom name.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Residue_name</replaceable> </term>
          <listitem>
            <para>
              A string which provides the residue name.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Residue_number</replaceable> </term>
          <listitem>
            <para>
              An integer which provides the residue index.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>X Y Z</replaceable> </term>
          <listitem>
            <para>
              3 floats which provide the atomic coordiantes.
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Charge</replaceable> </term>
          <listitem>
            <para>
              A float which provides the atomic charge (in electrons).
            </para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Radius</replaceable> </term>
          <listitem>
            <para>
              A float which provides the atomic radius (in &Aring;).
            </para>
          </listitem>
        </varlistentry>
      </variablelist>
      Clearly, this format can deviate wildly from PDB, particularly when large
      coordinate values are used.  However, in order to maintain compatibility
      with most molecular graphics programs, the PDB2PQR utilities provided with
      apbs (see the <link linkend="parameterization">Parameterization
        section</link>) attemp to preserve the PDB format as much as possible.
    </para>

  </sect1>

  <sect1 id="flat-format"> <title>Parameter file format</title>
    <para>APBS uses a very simple format for parameter files to be used with
      the <command><link linkend="parm">READ parm</link></command>
      command.  The parameter file is a series of lines of the format:
      <literallayout>
        <replaceable>Residue_name</replaceable> <replaceable>Atom_name</replaceable> <replaceable>Charge</replaceable> <replaceable>Radius</replaceable> <replaceable>Epsilon</replaceable>
      </literallayout>
      where the whitespaces are important and denote separation between the
      fields.  The fields here are:
      <variablelist>
        <varlistentry>
          <term> <replaceable>Residue_name</replaceable> </term>
          <listitem>
            <para>A string giving the residue name, as provided in the PDB file
              to be parameterized.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Atom_name</replaceable> </term>
          <listitem>
            <para>A string giving the atom name, as provided in the PDB file to
              be parameterized.</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Charge</replaceable> </term>
          <listitem>
            <para>A float giving the atomic charge (in electrons).</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Radius</replaceable> </term>
          <listitem>
            <para>A float giving the atomic Radius (in &Aring;).</para>
          </listitem>
        </varlistentry>
        <varlistentry>
          <term> <replaceable>Epsilon</replaceable> </term>
          <listitem>
            <para>A float giving the Lennard-Jones well depth (in kcal/mol);
              this parameter is read but not currently used by APBS.</para>
          </listitem>
        </varlistentry>
      </variablelist>
    </para>
  </sect1>

  <sect1 id="hb-format"> <title>Harwell-Boeing column-compressed matrix
      format</title>
    <para>This is the sparse matrix output format used by APBS for analyses of
      the matrix operators which are constructed during PB solution.  This
      format was implemented so matrix operators could by decomposed with
      SuperLU and ARPACK.
    </para>
    <important>
      <para>Details of the format are complicated; this section is under
        construction.  
      </para>
    </important>
  </sect1>

  <sect1 id="opendx-format"> <title>OpenDX scalar data format</title>

    <para>We output most discretized scalar data (e.g., potential,
      accessibility, etc.) from APBS in the data format used by the OpenDX
      software package
      (<ulink url="http://www.opendx.org">http://www.opendx.org</ulink>).  The
      OpenDX data format is very flexible; the following sections describe the
      application of this format for APBS multigrid and finite element
      datasets.
    </para>

    <sect2> <title>Multigrid</title>
      <para>
        This data format has the following form:
        <programlisting>
          # <replaceable>Comments</replaceable>
          <literal>object 1 class gridpositions counts</literal> <replaceable>nx ny nz</replaceable>
          <literal>origin</literal> <replaceable>xmin ymin zmin</replaceable>
          <literal>delta</literal> <replaceable>hx</replaceable> 0.0 0.0
          <literal>delta</literal> 0.0 <replaceable>hy</replaceable> 0.0 
          <literal>delta</literal> 0.0 0.0 <replaceable>hz</replaceable>
          <literal>object 2 class gridconnections counts</literal> <replaceable>nx ny nz</replaceable>
          <literal>object 3 class array type double rank 0 times</literal> <replaceable>n</replaceable>
          <replaceable>u(0,0,0) u(0,0,1) u(0,0,2)</replaceable>
          ...
          <replaceable>u(0,0,nz-3) u(0,0,nz-2) u(0,0,nz-1)</replaceable>
          <replaceable>u(0,1,0) u(0,1,1) u(0,1,2)</replaceable>
          ...
          <replaceable>u(0,1,nz-3) u(0,1,nz-2) u(0,1,nz-1)</replaceable>
          ...
          <replaceable>u(0,ny-3,nz-3) u(0,ny-2,nz-2) u(0,ny-1,nz-1)</replaceable>
          <replaceable>u(1,0,0) u(1,0,1) u(1,0,2)</replaceable>
          ...
          <literal>attribute "dep" string "positions"</literal>
          <literal>object "regular positions regular connections" class field</literal>
          <literal>component "positions" value 1</literal>
          <literal>component "connections" value 2</literal>
          <literal>component "data" value 3</literal>
        </programlisting>
        The variables in this example are:
        <variablelist>
          <varlistentry>
            <term> <replaceable>Comments</replaceable> </term>
            <listitem>
              <para>Any number of comment lines, each line starting with the
                "#" symbol</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term> <replaceable>nx ny nz</replaceable> </term>
            <listitem>
              <para>
                The number of grid points in the x-, y-, and z-directions.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry> 
            <term> <replaceable>xmin ymin zmin</replaceable> </term>
            <listitem>
              <para>
                The coordinates of the grid lower corner.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry> 
            <term> <replaceable>hx hy hz</replaceable> </term>
            <listitem>
              <para>
                The grid spacings in the x-, y-, and z-directions.
              </para>
            </listitem>
          </varlistentry>
          <varlistentry> 
            <term> <replaceable>n</replaceable> </term>
            <listitem>
              <para>
                The total number of grid points; 
                <replaceable>n</replaceable> =
                <replaceable>nx</replaceable> *
                <replaceable>ny</replaceable> *
                <replaceable>nz</replaceable> 
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term> <replaceable>u(*,*,*)</replaceable> </term>
            <listitem>
              <para>
                The data values, ordered with the z-index increasing most
                quickly, followed by the y-index, and then the x-index.
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </sect2>

    <sect2> <title>Finite element</title>
      <para>For finite element solutions, the OpenDX format takes the following
        form:
        <programlisting>
          <literal>object 1 class array type float rank 1 shape 3 items</literal> <replaceable>N</replaceable>
          <replaceable>v1x v1y v1z</replaceable>
          <replaceable>v2x v2y v2z</replaceable>
          ...
          <replaceable>vNx vNy vNz</replaceable>
          <literal>object 2 class array type int rank 1 shape 4 items</literal> <replaceable>M</replaceable>
          <replaceable>s1a s1b s1c s1d</replaceable>
          <replaceable>s2a s2b s2c s2d</replaceable>
          ...
          <replaceable>sMa sMb sMc sMd</replaceable>
          <literal>attribute "element type" string "tetrahedra"</literal>
          <literal>object 3 class array type float rank 0 items</literal> <replaceable>N</replaceable>
          <replaceable>u1</replaceable>
          <replaceable>u2</replaceable>
          ...
          <replaceable>uN</replaceable>
          <literal>attribute "dep" string "positions"</literal>
          <literal>object "irregular positions irregular connections" class field</literal>
          <literal>component "positions" value 1</literal>
          <literal>component "connections" value 2</literal>
          <literal>component "data" value 3</literal>
          <literal>end</literal>
        </programlisting>
        where the variables are:
        <variablelist>
          <varlistentry>
            <term> <replaceable>N</replaceable></term>
            <listitem>
              <para>Number of vertices</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term> <replaceable>vix viy viz</replaceable></term>
            <listitem>
              <para>Coordinates of vertex <replaceable>i</replaceable></para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term> <replaceable>M</replaceable></term>
            <listitem>
              <para>Number of simplices</para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term> <replaceable>sia sib sic sid</replaceable></term>
            <listitem>
              <para>
                IDs of vertices in simplex <replaceable>i</replaceable>
              </para>
            </listitem>
          </varlistentry>
          <varlistentry>
            <term> <replaceable>ui</replaceable></term>
            <listitem>
              <para>
                Data value associated with vertex <replaceable>i</replaceable>
              </para>
            </listitem>
          </varlistentry>
        </variablelist>
      </para>
    </sect2>

  </sect1>
  
</appendix>
